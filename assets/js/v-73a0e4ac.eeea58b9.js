"use strict";(self.webpackChunkvuepress_theme_reco_demo=self.webpackChunkvuepress_theme_reco_demo||[]).push([[500],{3602:(n,s,a)=>{a.r(s),a.d(s,{data:()=>t});const t={key:"v-73a0e4ac",path:"/docs/test/py/py.html",title:"Python学习笔记",lang:"en-US",frontmatter:{title:"Python学习笔记",tags:["blog"],date:"2022/04/10/22:17",author:"xhetx"},excerpt:"",headers:[{level:2,title:"1.变量与字符串",slug:"_1-变量与字符串",children:[{level:3,title:"变量",slug:"变量",children:[]},{level:3,title:"字符串",slug:"字符串",children:[]}]},{level:2,title:"2.遍历列表:For",slug:"_2-遍历列表-for",children:[{level:3,title:"数组:函数range()",slug:"数组-函数range",children:[]},{level:3,title:"切片:[0:3]",slug:"切片-0-3",children:[]},{level:3,title:"元组:不可改变的列表",slug:"元组-不可改变的列表",children:[]}]},{level:2,title:"3.IF语句",slug:"_3-if语句",children:[]},{level:2,title:"4.函数",slug:"_4-函数",children:[{level:3,title:"定义函数",slug:"定义函数",children:[]},{level:3,title:"形参和实参",slug:"形参和实参",children:[]},{level:3,title:"传递实参",slug:"传递实参",children:[]},{level:3,title:"关键字实参",slug:"关键字实参",children:[]},{level:3,title:"函数的默认值",slug:"函数的默认值",children:[]}]}],git:{},filePathRelative:"docs/test/py/py.md"}},150:(n,s,a)=>{a.r(s),a.d(s,{default:()=>Na});var t=a(6252);const p=(0,t._)("h2",{id:"_1-变量与字符串",tabindex:"-1"},[(0,t._)("a",{class:"header-anchor",href:"#_1-变量与字符串","aria-hidden":"true"},"#"),(0,t.Uk)(" 1.变量与字符串")],-1),e=(0,t._)("h3",{id:"变量",tabindex:"-1"},[(0,t._)("a",{class:"header-anchor",href:"#变量","aria-hidden":"true"},"#"),(0,t.Uk)(" 变量")],-1),o=(0,t._)("div",{class:"custom-container tip"},[(0,t._)("svg",{xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},[(0,t._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,t._)("circle",{cx:"12",cy:"12",r:"9"}),(0,t._)("path",{d:"M12 8h.01"}),(0,t._)("path",{d:"M11 12h1v4h1"})])]),(0,t._)("p",{class:"custom-container-title"},"TIP"),(0,t._)("p",null,"变量需要注意的就是变量的命名"),(0,t._)("p",null,"变量的命名规则，可以是数字、字母和下划线，但是不能以数字开头，不能包含空格，不能使用python的关键字作为变量名字")],-1),l=(0,t.uE)('<h3 id="字符串" tabindex="-1"><a class="header-anchor" href="#字符串" aria-hidden="true">#</a> <strong>字符串</strong></h3><blockquote><p><strong>字符串:引号内的一切都可以称为字符串</strong></p></blockquote><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token comment">#让字符串第一个字母大写</span>\nt <span class="token operator">=</span> <span class="token string">&quot;gaibiandaxiaoxie &quot;</span>\n<span class="token keyword">print</span><span class="token punctuation">(</span>t<span class="token punctuation">.</span>title<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n<span class="token comment">#字符串所有字母大写</span>\ns <span class="token operator">=</span> <span class="token string">&quot;suo you zi mu da xie&quot;</span>\n<span class="token keyword">print</span><span class="token punctuation">(</span>s<span class="token punctuation">.</span>upper<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n<span class="token comment">#字符串所有字母大写</span>\nx <span class="token operator">=</span> <span class="token string">&quot;SUO YOU ZI MU XIAO XIE&quot;</span>\n<span class="token keyword">print</span><span class="token punctuation">(</span>x<span class="token punctuation">.</span>lower<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n<span class="token comment">#字符串的拼接使用</span>\n<span class="token keyword">print</span><span class="token punctuation">(</span>x<span class="token operator">+</span>s<span class="token punctuation">)</span>\nz <span class="token operator">=</span><span class="token string">&quot;张三&quot;</span>\nl <span class="token operator">=</span><span class="token string">&quot;李四&quot;</span>\n<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;NIHAO&quot;</span><span class="token punctuation">,</span>z<span class="token punctuation">)</span>\nqm <span class="token operator">=</span> <span class="token string-interpolation"><span class="token string">f&quot;</span><span class="token interpolation"><span class="token punctuation">{</span>z<span class="token punctuation">}</span></span><span class="token interpolation"><span class="token punctuation">{</span>l<span class="token punctuation">}</span></span><span class="token string">&quot;</span></span>\n<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;你好&quot;</span><span class="token punctuation">,</span>qm<span class="token punctuation">)</span>\n<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;你好&quot;</span><span class="token punctuation">,</span>z<span class="token operator">+</span>l<span class="token punctuation">)</span>\n<span class="token comment">#使用\\t\\n  换行  切记\\t\\n 要写在双引号内 </span>\ns <span class="token operator">=</span> <span class="token string">&quot;\\n换行&quot;</span><span class="token comment">#\\n相当于回车</span>\nb <span class="token operator">=</span> <span class="token string">&quot;\\t空格&quot;</span><span class="token comment">#\\t相当于空格</span>\n<span class="token keyword">print</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span>\n<span class="token keyword">print</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span>\n\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br></div></div><h2 id="_2-遍历列表-for" tabindex="-1"><a class="header-anchor" href="#_2-遍历列表-for" aria-hidden="true">#</a> 2.遍历列表:For</h2>',4),r=(0,t._)("div",{class:"custom-container tip"},[(0,t._)("svg",{xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},[(0,t._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,t._)("circle",{cx:"12",cy:"12",r:"9"}),(0,t._)("path",{d:"M12 8h.01"}),(0,t._)("path",{d:"M11 12h1v4h1"})])]),(0,t._)("p",{class:"custom-container-title"},"TIP"),(0,t._)("p",null,"在使用python中的循环时，需要注意代码缩进和句尾的冒号")],-1),c=(0,t.uE)('<div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token comment">#在写循环的时候需要注意，for循环后面没有缩进的代码都执行一次，且执行是最后一次循环后的代码</span>\nnames <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&quot;ZS&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;LS&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;WW&quot;</span><span class="token punctuation">]</span>\n<span class="token keyword">for</span> name <span class="token keyword">in</span> names<span class="token punctuation">:</span>\n    <span class="token keyword">print</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span>\n<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;这个人的名字叫&quot;</span><span class="token punctuation">,</span>name<span class="token punctuation">)</span> \n<span class="token comment">#此时执行的结果为</span>\nZS\nLS\nWW\n这个人的名字叫 WW\n<span class="token comment">#因此可以看出来，在没有缩进的时候，执行的是列表在循环完成之后的的代码</span>\n\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><h3 id="数组-函数range" tabindex="-1"><a class="header-anchor" href="#数组-函数range" aria-hidden="true">#</a> 数组:函数range()</h3><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token comment">#range函数可以理解为数组的一种，通常用来存储一组数字</span>\n<span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">:</span>\n    <span class="token keyword">print</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span>\n<span class="token comment">#使用range()创建列表，在使用函数range()时，还可以通过指定步长来得到指定的值</span>\nlists <span class="token operator">=</span> <span class="token builtin">list</span><span class="token punctuation">(</span><span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n<span class="token keyword">print</span><span class="token punctuation">(</span>lists<span class="token punctuation">)</span>\n<span class="token comment">#得到结果[1, 2, 3, 4, 5, 6, 7, 8, 9]</span>\n<span class="token comment">#取步长</span>\nlists <span class="token operator">=</span> <span class="token builtin">list</span><span class="token punctuation">(</span><span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n<span class="token keyword">print</span><span class="token punctuation">(</span>lists<span class="token punctuation">)</span>\n<span class="token comment">#👉得到结果[1, 3, 5, 7, 9]</span>\n<span class="token comment">#通过上述示例可以知道，步长2是指从列表中的第一位值开始逐个加2的值</span>\n<span class="token comment">#通过函数range()获取1到50以内的整数，在把整数赋值给X</span>\nx <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>\n<span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token comment">#遍历列表1到50</span>\n    <span class="token keyword">if</span> i<span class="token operator">%</span><span class="token number">2</span> <span class="token operator">==</span><span class="token number">0</span><span class="token punctuation">:</span>\t\t<span class="token comment">#如何i除以2余数为0结果为真</span>\n        x<span class="token punctuation">.</span>append<span class="token punctuation">(</span>i<span class="token punctuation">)</span>  <span class="token comment">#把i的结果赋值给X</span>\n<span class="token keyword">print</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span>\n→→<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">,</span> <span class="token number">14</span><span class="token punctuation">,</span> <span class="token number">16</span><span class="token punctuation">,</span> <span class="token number">18</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">22</span><span class="token punctuation">,</span> <span class="token number">24</span><span class="token punctuation">,</span> <span class="token number">26</span><span class="token punctuation">,</span> <span class="token number">28</span><span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">,</span> <span class="token number">32</span><span class="token punctuation">,</span> <span class="token number">34</span><span class="token punctuation">,</span> <span class="token number">36</span><span class="token punctuation">,</span> <span class="token number">38</span><span class="token punctuation">,</span> <span class="token number">40</span><span class="token punctuation">,</span> <span class="token number">42</span><span class="token punctuation">,</span> <span class="token number">44</span><span class="token punctuation">,</span> <span class="token number">46</span><span class="token punctuation">,</span> <span class="token number">48</span><span class="token punctuation">]</span>\n\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br></div></div><h3 id="切片-0-3" tabindex="-1"><a class="header-anchor" href="#切片-0-3" aria-hidden="true">#</a> 切片:[0:3]</h3><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token comment">#注意:切片和索引一样，都是从0起始 ，倒序从-1开始</span>\n<span class="token comment">#切片就是取列表中的部分元素，比如[0:3]表示取列表中的前3个元素</span>\nx <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&quot;a&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;b&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;c&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;d&quot;</span><span class="token punctuation">]</span>\n<span class="token keyword">print</span><span class="token punctuation">(</span>x<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">:</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span>\n→→<span class="token punctuation">[</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;b&#39;</span><span class="token punctuation">]</span>\n<span class="token comment">#如果切片头，即表示默认从第一个开始</span>\n<span class="token comment">#如果切片头为整，即表示默认从第一个开始</span>\n<span class="token comment">#去掉切片尾，即表示从最后一个开始。[-1:]表示最后一个[-2:]表示最后一个和倒数第二个  以此类推</span>\nx <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&quot;a&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;b&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;c&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;d&quot;</span><span class="token punctuation">]</span>\n<span class="token keyword">print</span><span class="token punctuation">(</span>x<span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">3</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">)</span>\n<span class="token punctuation">[</span><span class="token string">&#39;b&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;c&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;d&#39;</span><span class="token punctuation">]</span>\n<span class="token comment">#切片后面在跟上数字，表示间隔多个元素取值。[0::2]表示从第一个到最后一个元素，每隔2个元素取值一次</span>\nx <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&quot;a&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;b&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;c&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;d&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;W &quot;</span><span class="token punctuation">,</span><span class="token string">&quot;WC&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;Weew &quot;</span><span class="token punctuation">,</span><span class="token string">&quot;WCqw&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;333W &quot;</span><span class="token punctuation">,</span><span class="token string">&quot;24WC&quot;</span><span class="token punctuation">]</span>\n<span class="token keyword">print</span><span class="token punctuation">(</span>x<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span>\n→→<span class="token punctuation">[</span><span class="token string">&#39;c&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;W &#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Weew &#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;333W &#39;</span><span class="token punctuation">]</span>\n\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><h3 id="元组-不可改变的列表" tabindex="-1"><a class="header-anchor" href="#元组-不可改变的列表" aria-hidden="true">#</a> 元组:不可改变的列表</h3>',6),u=(0,t._)("div",{class:"custom-container tip"},[(0,t._)("svg",{xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},[(0,t._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,t._)("circle",{cx:"12",cy:"12",r:"9"}),(0,t._)("path",{d:"M12 8h.01"}),(0,t._)("path",{d:"M11 12h1v4h1"})])]),(0,t._)("p",{class:"custom-container-title"},"TIP"),(0,t._)("p",null,"注意:元组是用圆括号()标识，元组不能改变但是可以重新定义")],-1),i=(0,t._)("h2",{id:"_3-if语句",tabindex:"-1"},[(0,t._)("a",{class:"header-anchor",href:"#_3-if语句","aria-hidden":"true"},"#"),(0,t.Uk)(" 3.IF语句")],-1),k=(0,t._)("div",{class:"custom-container tip"},[(0,t._)("svg",{xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},[(0,t._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,t._)("circle",{cx:"12",cy:"12",r:"9"}),(0,t._)("path",{d:"M12 8h.01"}),(0,t._)("path",{d:"M11 12h1v4h1"})])]),(0,t._)("p",{class:"custom-container-title"},"TIP"),(0,t._)("p",null,"#注意IF语句后面需要跟冒号:,并且需要注意缩进 if 判断条件： 执行语句…… else： 执行语句……"),(0,t._)("p",null,"if 语句的判断条件可以用>（大于）、<(小于)、==（等于）、>=（大于等于）、<=（小于等于）、!=(不等于)来表示其关系")],-1),b=(0,t.uE)('<div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token comment">#if语句测试2个字符串是否一致</span>\nA <span class="token operator">=</span> <span class="token string">&quot;测试2个字符串是否一致&quot;</span>\nB <span class="token operator">=</span> <span class="token string">&quot;测试2个字符串是否一致&quot;</span>\n<span class="token keyword">if</span> A <span class="token operator">==</span> B<span class="token punctuation">:</span>\n    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;字符串AB是一致的&quot;</span><span class="token punctuation">)</span>\n<span class="token keyword">else</span><span class="token punctuation">:</span>\n    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;字符串AB不是是一致的&quot;</span><span class="token punctuation">)</span> \n\n<span class="token comment">#if语句判断大小写是否一致    </span>\npassword <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">&quot;请输入密码:&quot;</span><span class="token punctuation">)</span>\nmima <span class="token operator">=</span> <span class="token string">&quot;aa123456&quot;</span>\n<span class="token keyword">if</span> mima <span class="token operator">==</span> password<span class="token punctuation">:</span> <span class="token comment">#如果密码等于输入的密码</span>\n    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;密码正确&quot;</span><span class="token punctuation">)</span> <span class="token comment">#则提示密码正确</span>\n<span class="token keyword">else</span><span class="token punctuation">:</span>                <span class="token comment">#否则执行</span>\n    <span class="token comment">#把输入的密码全部小写且再次和正确的密码比较</span>\n    password<span class="token punctuation">.</span>lower<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">==</span> password <span class="token keyword">and</span>  password<span class="token operator">==</span>mima \n    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;密码是正确的&quot;</span><span class="token punctuation">)</span> \n<span class="token comment">#if语句and和or判断特定值是否在列表中 </span>\nm <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;A&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;B&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;C&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;D&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;F&#39;</span><span class="token punctuation">]</span>\nn <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;A&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;B&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;C&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;D&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;E&#39;</span><span class="token string">&#39;F&#39;</span><span class="token punctuation">]</span>\n<span class="token keyword">if</span> <span class="token string">&quot;E&quot;</span> <span class="token keyword">in</span> m<span class="token punctuation">:</span>\n    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;E在列表M中&quot;</span><span class="token punctuation">)</span>\n<span class="token keyword">else</span><span class="token punctuation">:</span>\n    <span class="token string">&quot;E&quot;</span> <span class="token keyword">in</span> n <span class="token keyword">or</span> <span class="token string">&quot;E&quot;</span> <span class="token keyword">in</span> m\n    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;E在列表M中或列表N中&quot;</span><span class="token punctuation">)</span>\n<span class="token keyword">if</span> <span class="token string">&quot;C&quot;</span> <span class="token keyword">in</span> m <span class="token keyword">and</span> <span class="token string">&quot;C&quot;</span> <span class="token keyword">in</span> n<span class="token punctuation">:</span>\n    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;C在列表M中和列表N中&quot;</span><span class="token punctuation">)</span>\n\n\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br></div></div><table><thead><tr><th>if 表达式： 代码块</th><th style="text-align:center;"><img src="http://c.biancheng.net/uploads/allimg/190715/2-1ZG5132331b3.gif" alt="if语句执行流程"></th></tr></thead><tbody><tr><td>if 表达式： 代码块 1 else： 代码块 2</td><td style="text-align:center;"><img src="http://c.biancheng.net/uploads/allimg/190715/2-1ZG514101X44.gif" alt="if else语句执行流程"></td></tr><tr><td>if 表达式 1： 代码块 1 elif 表达式 2： 代码块 2 elif 表达式 3： 代码块 3 …//其它elif语句 else： 代码块 n</td><td style="text-align:center;"><img src="http://c.biancheng.net/uploads/allimg/190715/2-1ZG51324244V.gif" alt="if elif else语句执行流程"></td></tr></tbody></table><h2 id="_4-函数" tabindex="-1"><a class="header-anchor" href="#_4-函数" aria-hidden="true">#</a> 4.函数</h2>',3),m={style:{"text-align":"left"}},h={href:"https://docs.python.org/3/library/functions.html#abs",target:"_blank",rel:"noopener noreferrer"},d=(0,t.Uk)("内置参数"),g=(0,t._)("th",null,null,-1),_={style:{"text-align":"left"}},f=(0,t._)("strong",null,"A",-1),y={href:"https://docs.python.org/3/library/functions.html#abs",target:"_blank",rel:"noopener noreferrer"},q=(0,t._)("code",null,"abs()",-1),w={href:"https://docs.python.org/3/library/functions.html#aiter",target:"_blank",rel:"noopener noreferrer"},x=(0,t._)("code",null,"aiter()",-1),v={href:"https://docs.python.org/3/library/functions.html#all",target:"_blank",rel:"noopener noreferrer"},W=(0,t._)("code",null,"all()",-1),U={href:"https://docs.python.org/3/library/functions.html#any",target:"_blank",rel:"noopener noreferrer"},z=(0,t._)("code",null,"any()",-1),C={href:"https://docs.python.org/3/library/functions.html#anext",target:"_blank",rel:"noopener noreferrer"},I=(0,t._)("code",null,"anext()",-1),M={href:"https://docs.python.org/3/library/functions.html#ascii",target:"_blank",rel:"noopener noreferrer"},E=(0,t._)("code",null,"ascii()",-1),A=(0,t.Uk)(),B=(0,t._)("strong",null,"B",-1),P={href:"https://docs.python.org/3/library/functions.html#bin",target:"_blank",rel:"noopener noreferrer"},O=(0,t._)("code",null,"bin()",-1),T={href:"https://docs.python.org/3/library/functions.html#bool",target:"_blank",rel:"noopener noreferrer"},F=(0,t._)("code",null,"bool()",-1),Z={href:"https://docs.python.org/3/library/functions.html#breakpoint",target:"_blank",rel:"noopener noreferrer"},N=(0,t._)("code",null,"breakpoint()",-1),S={href:"https://docs.python.org/3/library/functions.html#func-bytearray",target:"_blank",rel:"noopener noreferrer"},j=(0,t._)("code",null,"bytearray()",-1),H={href:"https://docs.python.org/3/library/functions.html#func-bytes",target:"_blank",rel:"noopener noreferrer"},X=(0,t._)("code",null,"bytes()",-1),L=(0,t.Uk)(),D=(0,t._)("strong",null,"C",-1),G={href:"https://docs.python.org/3/library/functions.html#callable",target:"_blank",rel:"noopener noreferrer"},V=(0,t._)("code",null,"callable()",-1),Y={href:"https://docs.python.org/3/library/functions.html#chr",target:"_blank",rel:"noopener noreferrer"},R=(0,t._)("code",null,"chr()",-1),J={href:"https://docs.python.org/3/library/functions.html#classmethod",target:"_blank",rel:"noopener noreferrer"},K=(0,t._)("code",null,"classmethod()",-1),Q={href:"https://docs.python.org/3/library/functions.html#compile",target:"_blank",rel:"noopener noreferrer"},$=(0,t._)("code",null,"compile()",-1),nn={href:"https://docs.python.org/3/library/functions.html#complex",target:"_blank",rel:"noopener noreferrer"},sn=(0,t._)("code",null,"complex()",-1),an=(0,t.Uk)(),tn=(0,t._)("strong",null,"D",-1),pn={href:"https://docs.python.org/3/library/functions.html#delattr",target:"_blank",rel:"noopener noreferrer"},en=(0,t._)("code",null,"delattr()",-1),on={href:"https://docs.python.org/3/library/functions.html#func-dict",target:"_blank",rel:"noopener noreferrer"},ln=(0,t._)("code",null,"dict()",-1),rn={href:"https://docs.python.org/3/library/functions.html#dir",target:"_blank",rel:"noopener noreferrer"},cn=(0,t._)("code",null,"dir()",-1),un={href:"https://docs.python.org/3/library/functions.html#divmod",target:"_blank",rel:"noopener noreferrer"},kn=(0,t._)("code",null,"divmod()",-1),bn=(0,t._)("strong",null,"E",-1),mn={href:"https://docs.python.org/3/library/functions.html#enumerate",target:"_blank",rel:"noopener noreferrer"},hn=(0,t._)("code",null,"enumerate()",-1),dn={href:"https://docs.python.org/3/library/functions.html#eval",target:"_blank",rel:"noopener noreferrer"},gn=(0,t._)("code",null,"eval()",-1),_n={href:"https://docs.python.org/3/library/functions.html#exec",target:"_blank",rel:"noopener noreferrer"},fn=(0,t._)("code",null,"exec()",-1),yn=(0,t.Uk)(),qn=(0,t._)("strong",null,"F",-1),wn={href:"https://docs.python.org/3/library/functions.html#filter",target:"_blank",rel:"noopener noreferrer"},xn=(0,t._)("code",null,"filter()",-1),vn={href:"https://docs.python.org/3/library/functions.html#float",target:"_blank",rel:"noopener noreferrer"},Wn=(0,t._)("code",null,"float()",-1),Un={href:"https://docs.python.org/3/library/functions.html#format",target:"_blank",rel:"noopener noreferrer"},zn=(0,t._)("code",null,"format()",-1),Cn={href:"https://docs.python.org/3/library/functions.html#func-frozenset",target:"_blank",rel:"noopener noreferrer"},In=(0,t._)("code",null,"frozenset()",-1),Mn=(0,t.Uk)(),En=(0,t._)("strong",null,"G",-1),An={href:"https://docs.python.org/3/library/functions.html#getattr",target:"_blank",rel:"noopener noreferrer"},Bn=(0,t._)("code",null,"getattr()",-1),Pn={href:"https://docs.python.org/3/library/functions.html#globals",target:"_blank",rel:"noopener noreferrer"},On=(0,t._)("code",null,"globals()",-1),Tn=(0,t.Uk)(),Fn=(0,t._)("strong",null,"H",-1),Zn={href:"https://docs.python.org/3/library/functions.html#hasattr",target:"_blank",rel:"noopener noreferrer"},Nn=(0,t._)("code",null,"hasattr()",-1),Sn={href:"https://docs.python.org/3/library/functions.html#hash",target:"_blank",rel:"noopener noreferrer"},jn=(0,t._)("code",null,"hash()",-1),Hn={href:"https://docs.python.org/3/library/functions.html#help",target:"_blank",rel:"noopener noreferrer"},Xn=(0,t._)("code",null,"help()",-1),Ln={href:"https://docs.python.org/3/library/functions.html#hex",target:"_blank",rel:"noopener noreferrer"},Dn=(0,t._)("code",null,"hex()",-1),Gn=(0,t.Uk)(),Vn=(0,t._)("strong",null,"I",-1),Yn={href:"https://docs.python.org/3/library/functions.html#id",target:"_blank",rel:"noopener noreferrer"},Rn=(0,t._)("code",null,"id()",-1),Jn={href:"https://docs.python.org/3/library/functions.html#input",target:"_blank",rel:"noopener noreferrer"},Kn=(0,t._)("code",null,"input()",-1),Qn={href:"https://docs.python.org/3/library/functions.html#int",target:"_blank",rel:"noopener noreferrer"},$n=(0,t._)("code",null,"int()",-1),ns={href:"https://docs.python.org/3/library/functions.html#isinstance",target:"_blank",rel:"noopener noreferrer"},ss=(0,t._)("code",null,"isinstance()",-1),as={href:"https://docs.python.org/3/library/functions.html#issubclass",target:"_blank",rel:"noopener noreferrer"},ts=(0,t._)("code",null,"issubclass()",-1),ps={href:"https://docs.python.org/3/library/functions.html#iter",target:"_blank",rel:"noopener noreferrer"},es=(0,t._)("code",null,"iter()",-1),os={style:{"text-align":"left"}},ls=(0,t._)("strong",null,"L",-1),rs={href:"https://docs.python.org/3/library/functions.html#len",target:"_blank",rel:"noopener noreferrer"},cs=(0,t._)("code",null,"len()",-1),us={href:"https://docs.python.org/3/library/functions.html#func-list",target:"_blank",rel:"noopener noreferrer"},is=(0,t._)("code",null,"list()",-1),ks={href:"https://docs.python.org/3/library/functions.html#locals",target:"_blank",rel:"noopener noreferrer"},bs=(0,t._)("code",null,"locals()",-1),ms=(0,t.Uk)(),hs=(0,t._)("strong",null,"M",-1),ds={href:"https://docs.python.org/3/library/functions.html#map",target:"_blank",rel:"noopener noreferrer"},gs=(0,t._)("code",null,"map()",-1),_s={href:"https://docs.python.org/3/library/functions.html#max",target:"_blank",rel:"noopener noreferrer"},fs=(0,t._)("code",null,"max()",-1),ys={href:"https://docs.python.org/3/library/functions.html#func-memoryview",target:"_blank",rel:"noopener noreferrer"},qs=(0,t._)("code",null,"memoryview()",-1),ws={href:"https://docs.python.org/3/library/functions.html#min",target:"_blank",rel:"noopener noreferrer"},xs=(0,t._)("code",null,"min()",-1),vs=(0,t.Uk)(),Ws=(0,t._)("strong",null,"N",-1),Us={href:"https://docs.python.org/3/library/functions.html#next",target:"_blank",rel:"noopener noreferrer"},zs=(0,t._)("code",null,"next()",-1),Cs=(0,t.Uk)(),Is=(0,t._)("strong",null,"O",-1),Ms={href:"https://docs.python.org/3/library/functions.html#object",target:"_blank",rel:"noopener noreferrer"},Es=(0,t._)("code",null,"object()",-1),As={href:"https://docs.python.org/3/library/functions.html#oct",target:"_blank",rel:"noopener noreferrer"},Bs=(0,t._)("code",null,"oct()",-1),Ps={href:"https://docs.python.org/3/library/functions.html#open",target:"_blank",rel:"noopener noreferrer"},Os=(0,t._)("code",null,"open()",-1),Ts={href:"https://docs.python.org/3/library/functions.html#ord",target:"_blank",rel:"noopener noreferrer"},Fs=(0,t._)("code",null,"ord()",-1),Zs=(0,t.Uk)(),Ns=(0,t._)("strong",null,"P",-1),Ss={href:"https://docs.python.org/3/library/functions.html#pow",target:"_blank",rel:"noopener noreferrer"},js=(0,t._)("code",null,"pow()",-1),Hs={href:"https://docs.python.org/3/library/functions.html#print",target:"_blank",rel:"noopener noreferrer"},Xs=(0,t._)("code",null,"print()",-1),Ls={href:"https://docs.python.org/3/library/functions.html#property",target:"_blank",rel:"noopener noreferrer"},Ds=(0,t._)("code",null,"property()",-1),Gs=(0,t._)("strong",null,"R",-1),Vs={href:"https://docs.python.org/3/library/functions.html#func-range",target:"_blank",rel:"noopener noreferrer"},Ys=(0,t._)("code",null,"range()",-1),Rs={href:"https://docs.python.org/3/library/functions.html#repr",target:"_blank",rel:"noopener noreferrer"},Js=(0,t._)("code",null,"repr()",-1),Ks={href:"https://docs.python.org/3/library/functions.html#reversed",target:"_blank",rel:"noopener noreferrer"},Qs=(0,t._)("code",null,"reversed()",-1),$s={href:"https://docs.python.org/3/library/functions.html#round",target:"_blank",rel:"noopener noreferrer"},na=(0,t._)("code",null,"round()",-1),sa=(0,t.Uk)(),aa=(0,t._)("strong",null,"S",-1),ta={href:"https://docs.python.org/3/library/functions.html#func-set",target:"_blank",rel:"noopener noreferrer"},pa=(0,t._)("code",null,"set()",-1),ea={href:"https://docs.python.org/3/library/functions.html#setattr",target:"_blank",rel:"noopener noreferrer"},oa=(0,t._)("code",null,"setattr()",-1),la={href:"https://docs.python.org/3/library/functions.html#slice",target:"_blank",rel:"noopener noreferrer"},ra=(0,t._)("code",null,"slice()",-1),ca={href:"https://docs.python.org/3/library/functions.html#sorted",target:"_blank",rel:"noopener noreferrer"},ua=(0,t._)("code",null,"sorted()",-1),ia={href:"https://docs.python.org/3/library/functions.html#staticmethod",target:"_blank",rel:"noopener noreferrer"},ka=(0,t._)("code",null,"staticmethod()",-1),ba={href:"https://docs.python.org/3/library/functions.html#func-str",target:"_blank",rel:"noopener noreferrer"},ma=(0,t._)("code",null,"str()",-1),ha={href:"https://docs.python.org/3/library/functions.html#sum",target:"_blank",rel:"noopener noreferrer"},da=(0,t._)("code",null,"sum()",-1),ga={href:"https://docs.python.org/3/library/functions.html#super",target:"_blank",rel:"noopener noreferrer"},_a=(0,t._)("code",null,"super()",-1),fa=(0,t.Uk)(),ya=(0,t._)("strong",null,"T",-1),qa={href:"https://docs.python.org/3/library/functions.html#func-tuple",target:"_blank",rel:"noopener noreferrer"},wa=(0,t._)("code",null,"tuple()",-1),xa={href:"https://docs.python.org/3/library/functions.html#type",target:"_blank",rel:"noopener noreferrer"},va=(0,t._)("code",null,"type()",-1),Wa=(0,t.Uk)(),Ua=(0,t._)("strong",null,"V",-1),za={href:"https://docs.python.org/3/library/functions.html#vars",target:"_blank",rel:"noopener noreferrer"},Ca=(0,t._)("code",null,"vars()",-1),Ia=(0,t.Uk)(),Ma=(0,t._)("strong",null,"Z",-1),Ea={href:"https://docs.python.org/3/library/functions.html#zip",target:"_blank",rel:"noopener noreferrer"},Aa=(0,t._)("code",null,"zip()",-1),Ba=(0,t.Uk)(),Pa=(0,t._)("strong",null,"_",-1),Oa={href:"https://docs.python.org/3/library/functions.html#import__",target:"_blank",rel:"noopener noreferrer"},Ta=(0,t._)("code",null,"__import__()",-1),Fa=(0,t.uE)('<p>Python内置很多函数，可以直接调用，使用方法:函数名(参数) 例如:abs(-10) 则表示求-10的绝对值</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token comment">#调用内置函数</span>\n<span class="token comment">#abs获取绝对值</span>\na <span class="token operator">=</span><span class="token operator">-</span><span class="token number">100</span>\n<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">abs</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">)</span>\n<span class="token comment">#chr返回表示其 Unicode 代码点为整数 i 的字符的字符串。</span>\n<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">chr</span><span class="token punctuation">(</span><span class="token number">83633</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n<span class="token comment">#hex将整数转换为以“0x”为前缀的小写十六进制字符串。</span>\n<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">hex</span><span class="token punctuation">(</span><span class="token number">666</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n<span class="token comment">#max返回列表中最大值</span>\n<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">max</span><span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token number">66</span><span class="token punctuation">,</span><span class="token number">89</span><span class="token punctuation">,</span><span class="token number">864</span><span class="token punctuation">,</span><span class="token number">4556</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n<span class="token comment">#类型转换</span>\n<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">(</span><span class="token number">12.34</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">#浮点型转换为整型</span>\n<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">float</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">#整型转换为浮点型</span>\n\npython\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><h3 id="定义函数" tabindex="-1"><a class="header-anchor" href="#定义函数" aria-hidden="true">#</a> 定义函数</h3><p>解:给函数起个名字</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token comment">#定义函数</span>\n<span class="token comment">#使用方法</span>\n<span class="token triple-quoted-string string">&quot;&quot;&quot; def 函数名称(): #给函数起个名字\n    语句           #告诉函数该干什么\n函数名称() &quot;&quot;&quot;</span>\t\t<span class="token comment">#函数结束\t</span>\n<span class="token keyword">def</span> <span class="token function">name</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span> \n    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;定义一个名字是name的函数&quot;</span><span class="token punctuation">)</span>\nname<span class="token punctuation">(</span><span class="token punctuation">)</span>\n\npython\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><h3 id="形参和实参" tabindex="-1"><a class="header-anchor" href="#形参和实参" aria-hidden="true">#</a> 形参和实参</h3><p>解:在函数名后面()跟一个变量,可以把函数结尾的内容赋值给该变量</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">def</span> <span class="token function">name</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">:</span>\n    <span class="token keyword">print</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span>\nname<span class="token punctuation">(</span><span class="token string">&quot;我是变量X的值&quot;</span><span class="token punctuation">)</span>\n<span class="token comment">#此例中name(x)中的x称之为形参，函数结尾中的name()中的内容为实参</span>\npython\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h3 id="传递实参" tabindex="-1"><a class="header-anchor" href="#传递实参" aria-hidden="true">#</a> 传递实参</h3><p>解:函数中可以有多个形参，那就对应有多个实参。因此形参需要和实参位置相对应已避免出错</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token comment">#位置实参:在实参传递过程中，实参和形参是一一对应的。且实参可以被调用函数多次</span>\n<span class="token triple-quoted-string string">&quot;&quot;&quot; def cscd(形参1,形参2):\n    要执行的语句\ncscd(实参1,实参2) &quot;&quot;&quot;</span>\n<span class="token keyword">def</span> <span class="token function">name</span><span class="token punctuation">(</span>firstname<span class="token punctuation">,</span>lastname<span class="token punctuation">)</span><span class="token punctuation">:</span>\n    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;我的名字是&quot;</span><span class="token punctuation">,</span>lastname<span class="token operator">+</span>firstname<span class="token punctuation">)</span>\n    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;我的性别是&quot;</span><span class="token operator">+</span>lastname<span class="token punctuation">,</span><span class="token string">&quot;他的性别是&quot;</span><span class="token operator">+</span>firstname<span class="token punctuation">)</span>\nname<span class="token punctuation">(</span><span class="token string">&quot;三&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;张&quot;</span><span class="token punctuation">)</span>\nname<span class="token punctuation">(</span><span class="token string">&quot;男&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;女&quot;</span><span class="token punctuation">)</span>\n👉我的名字是 张三\n👉他的姓是张 他的名字是三\n👉我的名字是 四李\n👉他的姓是四 他的名字是李\n\npython\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><h3 id="关键字实参" tabindex="-1"><a class="header-anchor" href="#关键字实参" aria-hidden="true">#</a> 关键字实参</h3><p>解:直接关联实参和形参，不需要考虑顺序。</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token triple-quoted-string string">&quot;&quot;&quot; 关键字实参，是把实参与形参绑定，不需要考虑位置关系。 &quot;&quot;&quot;</span>\n<span class="token keyword">def</span> <span class="token function">pets</span><span class="token punctuation">(</span>pet_animal<span class="token punctuation">,</span>pet_name<span class="token punctuation">)</span><span class="token punctuation">:</span>\n    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;我有一只</span><span class="token interpolation"><span class="token punctuation">{</span>pet_animal<span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span>\n    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;我有一只</span><span class="token interpolation"><span class="token punctuation">{</span>pet_animal<span class="token punctuation">}</span></span><span class="token string">,它的名字叫</span><span class="token interpolation"><span class="token punctuation">{</span>pet_name<span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span>\n    <span class="token triple-quoted-string string">&quot;&quot;&quot; #在结束语句里面绑定实参和形参 &quot;&quot;&quot;</span>\npets<span class="token punctuation">(</span>pet_animal<span class="token operator">=</span><span class="token string">&quot;猫&quot;</span><span class="token punctuation">,</span>pet_name<span class="token operator">=</span><span class="token string">&quot;TOM&quot;</span><span class="token punctuation">)</span>\n\n\npython\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><h3 id="函数的默认值" tabindex="-1"><a class="header-anchor" href="#函数的默认值" aria-hidden="true">#</a> 函数的默认值</h3><p>解:在定义函数的时候给形参直接赋值</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">def</span> <span class="token function">pets</span><span class="token punctuation">(</span>pet_animal<span class="token punctuation">,</span>pet_name<span class="token operator">=</span><span class="token string">&quot;TOM&quot;</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token comment">#定义函数的时候给形参直接赋值</span>\n    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;我有一只</span><span class="token interpolation"><span class="token punctuation">{</span>pet_animal<span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span>\n    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;我有一只</span><span class="token interpolation"><span class="token punctuation">{</span>pet_animal<span class="token punctuation">}</span></span><span class="token string">,它的名字叫</span><span class="token interpolation"><span class="token punctuation">{</span>pet_name<span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span>\npets<span class="token punctuation">(</span>pet_animal<span class="token operator">=</span><span class="token string">&quot;猫&quot;</span><span class="token punctuation">)</span>\npython\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><hr><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token comment">#练习1，使用位置实参调用函数</span>\n<span class="token keyword">def</span> <span class="token function">make_shirt</span><span class="token punctuation">(</span>size<span class="token punctuation">,</span>text<span class="token punctuation">)</span><span class="token punctuation">:</span>\n    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;这个</span><span class="token interpolation"><span class="token punctuation">{</span>size<span class="token punctuation">}</span></span><span class="token string">的衬衫，需要打印一个</span><span class="token interpolation"><span class="token punctuation">{</span>text<span class="token punctuation">}</span></span><span class="token string">的字样&quot;</span></span><span class="token punctuation">)</span>\nmake_shirt<span class="token punctuation">(</span><span class="token string">&quot;大号&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;CHINA&quot;</span><span class="token punctuation">)</span>\n<span class="token comment">#练习2，使用关键字实参调用函数</span>\n<span class="token keyword">def</span> <span class="token function">make_shirt</span><span class="token punctuation">(</span>size<span class="token punctuation">,</span>text<span class="token punctuation">)</span><span class="token punctuation">:</span>\n    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;这个</span><span class="token interpolation"><span class="token punctuation">{</span>size<span class="token punctuation">}</span></span><span class="token string">的衬衫，需要打印一个</span><span class="token interpolation"><span class="token punctuation">{</span>text<span class="token punctuation">}</span></span><span class="token string">的字样&quot;</span></span><span class="token punctuation">)</span>\nmake_shirt<span class="token punctuation">(</span>size<span class="token operator">=</span><span class="token string">&quot;大号&quot;</span><span class="token punctuation">,</span>text<span class="token operator">=</span><span class="token string">&quot;CHINA&quot;</span><span class="token punctuation">)</span>\n<span class="token comment">#练习3，使用默认实参调用函数</span>\n<span class="token keyword">def</span> <span class="token function">make_shirt</span><span class="token punctuation">(</span>size<span class="token punctuation">,</span>text<span class="token operator">=</span><span class="token string">&quot;I LOVE PYTHON&quot;</span><span class="token punctuation">)</span><span class="token punctuation">:</span>\n    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;制作一个有</span><span class="token interpolation"><span class="token punctuation">{</span>text<span class="token punctuation">}</span></span><span class="token string">字样的</span><span class="token interpolation"><span class="token punctuation">{</span>size<span class="token punctuation">}</span></span><span class="token string">T恤&quot;</span></span><span class="token punctuation">)</span>\nmake_shirt<span class="token punctuation">(</span>size<span class="token operator">=</span><span class="token string">&quot;大号&quot;</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div>',19),Za={},Na=(0,a(3744).Z)(Za,[["render",function(n,s){const a=(0,t.up)("ExternalLinkIcon");return(0,t.wg)(),(0,t.iD)(t.HY,null,[p,e,o,l,r,c,u,i,k,b,(0,t._)("table",null,[(0,t._)("thead",null,[(0,t._)("tr",null,[(0,t._)("th",m,[(0,t._)("a",h,[d,(0,t.Wm)(a)])]),g])]),(0,t._)("tbody",null,[(0,t._)("tr",null,[(0,t._)("td",_,[f,(0,t._)("a",y,[q,(0,t.Wm)(a)]),(0,t._)("a",w,[x,(0,t.Wm)(a)]),(0,t._)("a",v,[W,(0,t.Wm)(a)]),(0,t._)("a",U,[z,(0,t.Wm)(a)]),(0,t._)("a",C,[I,(0,t.Wm)(a)]),(0,t._)("a",M,[E,(0,t.Wm)(a)]),A,B,(0,t._)("a",P,[O,(0,t.Wm)(a)]),(0,t._)("a",T,[F,(0,t.Wm)(a)]),(0,t._)("a",Z,[N,(0,t.Wm)(a)]),(0,t._)("a",S,[j,(0,t.Wm)(a)]),(0,t._)("a",H,[X,(0,t.Wm)(a)]),L,D,(0,t._)("a",G,[V,(0,t.Wm)(a)]),(0,t._)("a",Y,[R,(0,t.Wm)(a)]),(0,t._)("a",J,[K,(0,t.Wm)(a)]),(0,t._)("a",Q,[$,(0,t.Wm)(a)]),(0,t._)("a",nn,[sn,(0,t.Wm)(a)]),an,tn,(0,t._)("a",pn,[en,(0,t.Wm)(a)]),(0,t._)("a",on,[ln,(0,t.Wm)(a)]),(0,t._)("a",rn,[cn,(0,t.Wm)(a)]),(0,t._)("a",un,[kn,(0,t.Wm)(a)])]),(0,t._)("td",null,[bn,(0,t._)("a",mn,[hn,(0,t.Wm)(a)]),(0,t._)("a",dn,[gn,(0,t.Wm)(a)]),(0,t._)("a",_n,[fn,(0,t.Wm)(a)]),yn,qn,(0,t._)("a",wn,[xn,(0,t.Wm)(a)]),(0,t._)("a",vn,[Wn,(0,t.Wm)(a)]),(0,t._)("a",Un,[zn,(0,t.Wm)(a)]),(0,t._)("a",Cn,[In,(0,t.Wm)(a)]),Mn,En,(0,t._)("a",An,[Bn,(0,t.Wm)(a)]),(0,t._)("a",Pn,[On,(0,t.Wm)(a)]),Tn,Fn,(0,t._)("a",Zn,[Nn,(0,t.Wm)(a)]),(0,t._)("a",Sn,[jn,(0,t.Wm)(a)]),(0,t._)("a",Hn,[Xn,(0,t.Wm)(a)]),(0,t._)("a",Ln,[Dn,(0,t.Wm)(a)]),Gn,Vn,(0,t._)("a",Yn,[Rn,(0,t.Wm)(a)]),(0,t._)("a",Jn,[Kn,(0,t.Wm)(a)]),(0,t._)("a",Qn,[$n,(0,t.Wm)(a)]),(0,t._)("a",ns,[ss,(0,t.Wm)(a)]),(0,t._)("a",as,[ts,(0,t.Wm)(a)]),(0,t._)("a",ps,[es,(0,t.Wm)(a)])])]),(0,t._)("tr",null,[(0,t._)("td",os,[ls,(0,t._)("a",rs,[cs,(0,t.Wm)(a)]),(0,t._)("a",us,[is,(0,t.Wm)(a)]),(0,t._)("a",ks,[bs,(0,t.Wm)(a)]),ms,hs,(0,t._)("a",ds,[gs,(0,t.Wm)(a)]),(0,t._)("a",_s,[fs,(0,t.Wm)(a)]),(0,t._)("a",ys,[qs,(0,t.Wm)(a)]),(0,t._)("a",ws,[xs,(0,t.Wm)(a)]),vs,Ws,(0,t._)("a",Us,[zs,(0,t.Wm)(a)]),Cs,Is,(0,t._)("a",Ms,[Es,(0,t.Wm)(a)]),(0,t._)("a",As,[Bs,(0,t.Wm)(a)]),(0,t._)("a",Ps,[Os,(0,t.Wm)(a)]),(0,t._)("a",Ts,[Fs,(0,t.Wm)(a)]),Zs,Ns,(0,t._)("a",Ss,[js,(0,t.Wm)(a)]),(0,t._)("a",Hs,[Xs,(0,t.Wm)(a)]),(0,t._)("a",Ls,[Ds,(0,t.Wm)(a)])]),(0,t._)("td",null,[Gs,(0,t._)("a",Vs,[Ys,(0,t.Wm)(a)]),(0,t._)("a",Rs,[Js,(0,t.Wm)(a)]),(0,t._)("a",Ks,[Qs,(0,t.Wm)(a)]),(0,t._)("a",$s,[na,(0,t.Wm)(a)]),sa,aa,(0,t._)("a",ta,[pa,(0,t.Wm)(a)]),(0,t._)("a",ea,[oa,(0,t.Wm)(a)]),(0,t._)("a",la,[ra,(0,t.Wm)(a)]),(0,t._)("a",ca,[ua,(0,t.Wm)(a)]),(0,t._)("a",ia,[ka,(0,t.Wm)(a)]),(0,t._)("a",ba,[ma,(0,t.Wm)(a)]),(0,t._)("a",ha,[da,(0,t.Wm)(a)]),(0,t._)("a",ga,[_a,(0,t.Wm)(a)]),fa,ya,(0,t._)("a",qa,[wa,(0,t.Wm)(a)]),(0,t._)("a",xa,[va,(0,t.Wm)(a)]),Wa,Ua,(0,t._)("a",za,[Ca,(0,t.Wm)(a)]),Ia,Ma,(0,t._)("a",Ea,[Aa,(0,t.Wm)(a)]),Ba,Pa,(0,t._)("a",Oa,[Ta,(0,t.Wm)(a)])])])])]),Fa],64)}]])}}]);